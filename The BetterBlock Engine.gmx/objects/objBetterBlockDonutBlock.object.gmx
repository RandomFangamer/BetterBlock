<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBetterBlockDonutBlock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objBetterBlock</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
timer = -1;
active = true;
falling = false;
image_speed = 0;
xOrigin = x; //shaking
yOrigin = y; //shaking
//If actualShake is true, the object actually moves its position instead of just drawing its sprite at an offset to test Better Block movement.
//If you want to actually use these blocks, I recommend changing actualShake to false. Otherwise, you will encounter some weird behavior when the player is standing on two at once.
actualShake = false;
shakeXOff = 0;
shakeYOff = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (actualShake){
    xOrigin += hspeed;
    yOrigin += vspeed;
}
if (!falling &amp;&amp; active){
    if (wasCarrying){ //only fall if player is standing on the platform
        if (timer == -1){
            timer = 120;
            image_index = 1;
        }else timer --;
        
        if (timer &lt;= 50){
            shakeXOff = irandom_range(-3,3);
            shakeYOff = irandom_range(-3,3);
            if (actualShake){
                x = xOrigin+shakeXOff;
                y = yOrigin+shakeYOff;
            }
        }else{
            shakeXOff = 0;
            shakeYOff = 0;
            if (actualShake){
                x = xOrigin;
                y = yOrigin;
            }
        }
        if (timer &lt;= 0){
            falling = true;
            friction = 0;
            vspeed = global.grav;
            gravity = 0.08*global.grav;
            if (actualShake){
                x = xOrigin;
                y = yOrigin;
            }
            timer = -1;
        }
    }else{
        timer = -1;
        image_index = 0;
        if (actualShake){
            x = xOrigin;
            y = yOrigin;
        }
    }
}else{
    shakeXOff = 0;
    shakeYOff = 0;
}

if ((sign(vspeed) == 1 &amp;&amp; bbox_top &gt;= room_height + 32) || (sign(vspeed) == -1 &amp;&amp; bbox_bottom &lt;= -32)){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (actualShake){
    draw_self();
}else{
    draw_sprite_ext(sprite_index, image_index, x + shakeXOff, y + shakeYOff, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
